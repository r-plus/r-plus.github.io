<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: tweak | seekpoint]]></title>
  <link href="http://r-plus.github.io/blog/categories/tweak/atom.xml" rel="self"/>
  <link href="http://r-plus.github.io/"/>
  <updated>2014-07-19T13:20:21+09:00</updated>
  <id>http://r-plus.github.io/</id>
  <author>
    <name><![CDATA[r_plus]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[IME変換中文字に対応したSwipeShiftCaret 1.6.4]]></title>
    <link href="http://r-plus.github.io/blog/2014/07/19/imebian-nidui-ying-sitaswipeshiftcaret-1-dot-6-4/"/>
    <updated>2014-07-19T12:55:00+09:00</updated>
    <id>http://r-plus.github.io/blog/2014/07/19/imebian-nidui-ying-sitaswipeshiftcaret-1-dot-6-4</id>
    <content type="html"><![CDATA[<p><img src="/images/SSC164.gif" alt="SSC" /></p>

<p>SwipeShiftCaret v1.6.4は<a href="https://github.com/r-plus/SwipeShiftCaret/tree/5b88777576293da2d3e306cda62c7797a5870844">v0.1</a>の頃からの課題だったIME変換中文字の移動に対応しました。(iOS 7+ですが)</p>

<p>なお、変換中の文字付近をタップした際に出現する拡大ビューが表示されている場合は、iOSデフォルトの動作を優先します。(仕様)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[UIKitターゲットにおける厳密なApplication判定]]></title>
    <link href="http://r-plus.github.io/blog/2014/06/22/uikittagetutoniokeruyan-mi-naapplicationpan-ding/"/>
    <updated>2014-06-22T21:24:00+09:00</updated>
    <id>http://r-plus.github.io/blog/2014/06/22/uikittagetutoniokeruyan-mi-naapplicationpan-ding</id>
    <content type="html"><![CDATA[<p>全アプリ向けにtweakを作成する時は慣例として<code>com.apple.UIKit</code>を指定するが、UIKitフレームワークをリンクしているバイナリは<code>/bin</code>, <code>/sbin</code>, <code>/usr/libexec</code>配下などにもある。</p>

<p>これを厳密にアプリケーションのみをターゲットにするなら下記のコードで<code>%init</code>を行うかどうかを制御すれば良い。</p>

<pre><code>NSString *bundlePath = [[NSBundle mainBundle] bundlePath];
if ([bundlePath hasSuffix:@".app"]) {
    // for application code.
    %init;
}
</code></pre>

<p>Available in iOS 2.0 and later.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[PostNotification with object]]></title>
    <link href="http://r-plus.github.io/blog/2014/03/09/postnotification-with-object/"/>
    <updated>2014-03-09T16:27:00+09:00</updated>
    <id>http://r-plus.github.io/blog/2014/03/09/postnotification-with-object</id>
    <content type="html"><![CDATA[<h3>DarwinNotifyCenter</h3>

<p>PreferenceLoaderからtweakの設定変更時の変更通知としてスタンダードになっているCFNotificationCenterの<code>DarwinNotifyCenter</code>ですが、これはシステムグローバル用の通知として設計されており、</p>

<pre><code>void CFNotificationCenterPostNotification(CFNotificationCenterRef center,
        CFStringRef name,
        const void *object,
        CFDictionaryRef userInfo,
        Boolean deliverImmediately);
</code></pre>

<p>CFNotificationCenterPostNotificationにおける引数<code>object</code>, <code>userinfo</code>, <code>deliverimmediately</code>は無視され<code>NULL</code>になります。であれば、有効な引数は<code>name</code>だけなので、<code>uint32_t notify_post(const char *name);</code>はcenterをDarwinでnameを引数に取りその他をNULLにした便利関数です。</p>

<p>通常であれば何か変更が入ったら全て設定値をロードしなおせば良いが、極々まれにそれでは都合が悪い場合(パフォーマンスとか)があります。何の設定が変更されたかをPreferenceBundleとして得る事はセッターを設定すると得られますが、それを対象のプロセスに伝える方法としてIPCをするのは大げさでちょいと面倒でした。</p>

<h3>DistributedCenter</h3>

<p>CFNotificationCenterRefには3種類あり、<code>Darwin</code>, <code>Local</code>, <code>Distributed</code>の3種類があります。このうち、<code>Distributed</code>はiOSではimportされない記述になっています。</p>

<pre><code>#if (TARGET_OS_MAC &amp;&amp; !(TARGET_OS_EMBEDDED || TARGET_OS_IPHONE)) || TARGET_OS_WIN32
CF_EXPORT CFNotificationCenterRef CFNotificationCenterGetDistributedCenter(void);
#endif
</code></pre>

<p>が、iOS 5からいつのまにか内部的には実装されていました。
サンプルコードは<a href="http://www.iphonedevwiki.net/index.php/CFNotificationCenter">dev wiki</a>に書きました。
Cloakyは1.6.3からこれを使用してステータスバーアイコンのON/OFF設定を検出しています。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Sleipnizer v4.1 overview]]></title>
    <link href="http://r-plus.github.io/blog/2014/01/26/sleipnizer-4-dot-1/"/>
    <updated>2014-01-26T12:17:00+09:00</updated>
    <id>http://r-plus.github.io/blog/2014/01/26/sleipnizer-4-dot-1</id>
    <content type="html"><![CDATA[<p>全Changelogは<a href="http://tweak-description.appspot.com/cydia/sleipnizer.html">こちら</a>を見ていただくとして、4.1の目玉について。</p>

<ul>
<li><p>Multiple Javascript action definition.  <br/>
かなり前から要望はいただいていた機能で、JavaScriptの実行アクションをユーザが自由に追加できます。増やした分は「Run JavaScript n」の形で表現されます。</p></li>
<li><p>onLoad Javascript execution.  <br/>
ページのロード完了時に指定したJavaScriptを実行します。前段の機能で複数指定が可能になった為、こちらも複数のJSを指定できます。私はAutoPagerizeのJSを設定してます。</p></li>
<li><p>Flipswitch can invoke alternate-action-url.  <br/>
特有というわけではないが、Flipswitchのalternate-action-urlにSleipnizerの設定を開くPATHを追加しました。CCTogglesのトグルを長押しすると起動できます。地味に便利。</p></li>
<li><p>Gesture系の設定をまとめて1階層下へ  <br/>
&ldquo;L&rdquo;, &ldquo;U"そしてGlitchy GestureとSensitivityをまとめて1階層下へ移動。</p></li>
</ul>


<p>その他、バグ修正等。たぶんこの実装を行った事で「Run JavaScript n」じゃなくて名前にしてくれと要望がでると思いますが、いまのところはペンディングで。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[TimeStamp]]></title>
    <link href="http://r-plus.github.io/blog/2013/07/28/timestamp/"/>
    <updated>2013-07-28T00:02:00+09:00</updated>
    <id>http://r-plus.github.io/blog/2013/07/28/timestamp</id>
    <content type="html"><![CDATA[<p>最近終業時間をメモるためにカレンダーにその時間を登録しているので、そのショートカットとしてActivator用のtweakを作りました。</p>

<p>TimeStamp <a href="https://github.com/r-plus/TimeStamp">https://github.com/r-plus/TimeStamp</a>   <br/>
debも置いてあります。</p>

<p>最近のgithubはrepo作成時にライセンス選ぶとライセンス本文ファイルとREADME.mdを生成してくれるんですね。ちなみにPublicDomainにしてみました。</p>
]]></content>
  </entry>
  
</feed>
